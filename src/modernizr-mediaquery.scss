/***********************************************
	modernizr-mediaquery.scss, 

	(c) 2015, FCOO

	https://github.com/FCOO/modernizr-mediaquery
	https://github.com/FCOO

************************************************/
//MODERNIZR-SASS - http://github.com/FCOO/modernizr-scss
@import "../bower_components/modernizr-scss/dist/modernizr-scss";


$html-font-size		: 16px;
$create-FIRST-up	: false !default; //When true the media query FIRST-up (allway display) and no-FIRST-up (allways hidden) are created
$create-LAST-down	: false !default;	//When true the media query LAST-down (allway display) and no-LAST-down (allways hidden) are created

$breakpoints: (
  small: 0,
  medium: 640px,
  large: 1024px,
  xlarge: 1200px,
  xxlarge: 1440px
) !default;


//******************************************************
@function strip-unit($number) {
	@if type-of($number) == 'number' and not unitless($number) {
		@return $number / ($number * 0 + 1);
	}
	@return $number;
}

//******************************************************
// Converts a pixel or unitless value to em, for use in breakpoints.
@function -mmqd-px-to-em($value) {
	$base: $html-font-size;
	@if unit($base) == '%' {
		$base: ($base / 100%) * 16px;
	}
  @return strip-unit($value) / strip-unit($base) * 1em;
}

//******************************************************
// function -mmqd-serialize
// This function is a modified copy of @function -zf-bp-serialize (..) by Foundation 
@function -mmqd-serialize($map) {
  $str: '';
  @each $key, $value in $map {
    $str: $str + $key + '=' + $value + '&';
  }
  $str: str-slice($str, 1, -2);
  @return $str;
}


//Extract the name and min-value from $breakpoints
$bp-names: ();
$bp-min-values: ();
@each $size in map-keys($breakpoints) {
	$bp-names			: append( $bp-names, $size );
	$bp-min-values: append( $bp-min-values, map-get($breakpoints, $size) );
}

//$media-queries-map = (name: media-query, name2:media-query2,...,nameN: mediaqueryN)
$media-queries-map: ();

//Add SIZE, SIZE-down, and SIZE-up to the list of modernizr-tests
@for $i from 1 through length($bp-names) {
	$is-first: $i == 1;
	$is-last: $i == length($bp-names);

	$name			: nth($bp-names, $i);
	$name-up	: $name + '-up';
	$name-down: $name + '-down';

	$min: -mmqd-px-to-em( nth($bp-min-values, $i) );
	$max: 0em;
	@if not $is-last {
		$max: -mmqd-px-to-em( nth($bp-min-values, $i+1) - 1 );
	}
	$mq			: '';
	$mq-up	: '';
	$mq-down: '';

	@if $min > 0 {
		$mq		: $mq			+ ' and (min-width: #{$min})';
		$mq-up: $mq-up	+ ' and (min-width: #{$min})';
	}
	@if $max > 0 {
		$mq			: $mq				+ ' and (max-width: #{$max})';
		$mq-down: $mq-down	+ ' and (max-width: #{$max})';
	}

	//Adding classes for SIZE
	@media screen#{$mq}{
		@include -ms-show-and-hide( ($name), false, true);
	}
	@media not all#{$mq}{
		@include -ms-show-and-hide( ($name), false, false);
	}

	//Adding the query to $media-queries-map
	$media-queries-map: map-merge($media-queries-map, ($name: 'screen' + $mq));

	
	//Adding classes for SIZE-down
	@if not $is-last or $create-LAST-down {
		@media screen#{$mq-down}{
			@include -ms-show-and-hide( ($name-down), false, true);
		}
		@media not all#{$mq-down}{
			@include -ms-show-and-hide( ($name-down), false, false);
		}

		//Adding the query to $media-queries-map
		$media-queries-map: map-merge($media-queries-map, ($name-down: 'screen' + $mq-down));
	}

	//Adding classes for SIZE-up
	@if not $is-first or $create-FIRST-up {
		@media screen#{$mq-up}{
			@include -ms-show-and-hide( ($name-up), false, true);
		}
		@media not all#{$mq-up}{
			@include -ms-show-and-hide( ($name-up), false, false);
		}

		//Adding the query to $media-queries-map
		$media-queries-map: map-merge($media-queries-map, ($name-up: 'screen' + $mq-up));
	}
} //@for $i from 1 through length($bp-names) {...


//******************************************************************************************
//Create show/hide-for-TEST and show/hide-for-no-TEST, TEST = the Modernizr tests installed
//$modernizr-tests = the list of tests added to Modernizr by modernizr-mediaquery.js
$modernizr-tests: desktop, mobile, phone, tablet, windows, ios, android, mobilegradea; 
@each $modernizr-test in $modernizr-tests {
	@include show-and-hide-for-modernizr-test( $modernizr-test, html );
}

//******************************************************************************************
// Orientation targeting - 'landscape' and 'portrait'
@include -ms-show-and-hide( (landscape), false, true,  block);
@include -ms-show-and-hide( (portrait),  false, false, block);

@media screen and (orientation: landscape) {
	@include -ms-show-and-hide( (landscape), false, true,  block);
	@include -ms-show-and-hide( (portrait),  false, false, block);
}
@media screen and (orientation: portrait) {
	@include -ms-show-and-hide( (landscape), false, false, block);
	@include -ms-show-and-hide( (portrait), false,  true,  block);
}
//Adding the query to $media-queries-map
$media-queries-map: map-merge( $media-queries-map, ('landscape': 'screen and (orientation: landscape)'));
$media-queries-map: map-merge( $media-queries-map, ('portrait'	: 'screen and (orientation: portrait)'));


//******************************************************************************************
// Print visibility - default is display: none
.show-for-print { display: none !important; }
@media print {
	@include -ms-show-and-hide( (print), false, true, block);
}

// The breakpoints are applied to a <meta> tag, which is read by the ModernizrMQDevice js-object-class. Applied from Foundation 6
.modernizr-mediaquery {
	font-family: -mmqd-serialize($media-queries-map);
}
